export const SignUpFormBaseString =
  'import { Button } from "@/components/ui/button";\nimport { Checkbox } from "@/components/ui/checkbox";\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from "@/components/ui/dialog";\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from "@/components/ui/form";\nimport { Input } from "@/components/ui/input";\nimport { Label } from "@/components/ui/label";\nimport { zodResolver } from "@hookform/resolvers/zod";\nimport { Eye, EyeClosed } from "lucide-react";\nimport { useState } from "react";\nimport { useForm } from "react-hook-form";\nimport * as z from "zod";\n\nconst formSchema = z\n  .object({\n    email: z.string().email({ message: "Invalid email address" }),\n    password: z\n      .string()\n      .min(6, { message: "Password must be at least 6 characters" }),\n    confirmPassword: z\n      .string()\n      .min(6, { message: "Please confirm your password" }),\n    terms: z.boolean(),\n  })\n  .refine((data) => data.password === data.confirmPassword, {\n    message: "Passwords do not match",\n    path: ["confirmPassword"],\n  });\n\ntype FormData = z.infer<typeof formSchema>;\n\nexport function SignUpFormBase() {\n  const [showPassword, setShowPassword] = useState(false);\n\n  const togglePasswordVisibility = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const form = useForm<FormData>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      email: "",\n      password: "",\n      confirmPassword: "",\n    },\n  });\n\n  const onSubmit = () => {\n    alert("Sign Up Successful");\n  };\n\n  return (\n    <Dialog>\n      <DialogTrigger asChild>\n        <Button variant="outline">Sign Up Form</Button>\n      </DialogTrigger>\n      <DialogContent className="sm:max-w-[425px] rounded-md shadow-lg p-6">\n        <DialogHeader>\n          <DialogTitle className="text-center text-2xl font-semibold">\n            Sign Up\n          </DialogTitle>\n          <DialogDescription className="text-center text-gray-500">\n            Create your account by filling in the details below\n          </DialogDescription>\n        </DialogHeader>\n\n        <Form {...form}>\n          <form\n            onSubmit={form.handleSubmit(onSubmit)}\n            className="grid gap-4 py-4"\n          >\n            <FormField\n              control={form.control}\n              name="email"\n              render={({ field }) => (\n                <FormItem>\n                  <Label>Email</Label>\n                  <FormControl>\n                    <Input\n                      id="email"\n                      placeholder="Enter your email"\n                      className="w-full p-3 border rounded-lg"\n                      {...field}\n                    />\n                  </FormControl>\n                  <FormMessage>\n                    {form.formState.errors.email?.message}\n                  </FormMessage>\n                </FormItem>\n              )}\n            />\n\n            <FormField\n              control={form.control}\n              name="password"\n              render={({ field }) => (\n                <FormItem>\n                  <Label>Password</Label>\n                  <div className="relative">\n                    <FormControl>\n                      <Input\n                        type={showPassword ? "text" : "password"}\n                        placeholder="Enter your password"\n                        className="w-full p-3 border rounded-lg pr-10"\n                        {...field}\n                      />\n                    </FormControl>\n                    <Button\n                      variant="ghost"\n                      type="button"\n                      onClick={togglePasswordVisibility}\n                      className="absolute inset-y-0 right-0 flex items-center pr-3 hover:bg-transparent focus:outline-none"\n                    >\n                      {showPassword ? <Eye /> : <EyeClosed />}\n                    </Button>\n                  </div>\n                  <FormMessage>\n                    {form.formState.errors.password?.message}\n                  </FormMessage>\n                </FormItem>\n              )}\n            />\n\n            <FormField\n              control={form.control}\n              name="confirmPassword"\n              render={({ field }) => (\n                <FormItem>\n                  <Label>Confirm Password</Label>\n                  <div className="relative">\n                    <FormControl>\n                      <Input\n                        type={showPassword ? "text" : "password"}\n                        placeholder="Confirm your password"\n                        className="w-full p-3 border rounded-lg pr-10"\n                        {...field}\n                      />\n                    </FormControl>\n                    <FormMessage>\n                      {form.formState.errors.confirmPassword?.message}\n                    </FormMessage>\n                  </div>\n                </FormItem>\n              )}\n            />\n\n            <FormField\n              control={form.control}\n              name="terms"\n              rules={{ required: "You must agree to the terms" }}\n              render={({ field }) => (\n                <FormItem className="flex items-center space-x-2">\n                  <div className="flex justify-center items-center gap-1">\n                    <Checkbox\n                      id="agreeTerms"\n                      checked={field.value}\n                      onCheckedChange={field.onChange}\n                    />\n                    <FormLabel\n                      htmlFor="agreeTerms"\n                      className="text-sm font-semibold"\n                    >\n                      I agree to the terms and conditions\n                    </FormLabel>\n                  </div>\n                </FormItem>\n              )}\n            />\n\n            <Button type="submit" className="w-full p-3 rounded-lg">\n              Sign up\n            </Button>\n\n            <div className="relative flex py-4 items-center">\n              <div className="flex-grow border-t border-gray-300" />\n              <span className="flex-shrink mx-4 text-gray-400 text-sm">OR</span>\n              <div className="flex-grow border-t border-gray-300" />\n            </div>\n\n            <div className="grid gap-2">\n              <Button\n                variant="outline"\n                className="w-full flex justify-center items-center gap-2"\n              >\n                Sign up with Google\n              </Button>\n              <Button\n                variant="outline"\n                className="w-full flex justify-center items-center gap-2"\n              >\n                Sign up with Facebook\n              </Button>\n            </div>\n          </form>\n        </Form>\n        <DialogFooter>\n          <p className="text-sm font-semibold">Already Have an account?</p>\n          <a\n            href="/"\n            className="text-sm font-semibold text-blue-500 hover:underline"\n          >\n            Sign In\n          </a>\n        </DialogFooter>\n      </DialogContent>\n    </Dialog>\n  );\n}\n';
