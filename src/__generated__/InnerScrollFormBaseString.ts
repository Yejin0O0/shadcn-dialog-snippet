export const InnerScrollFormBaseString =
  'import { Button } from "@/components/ui/button";\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from "@/components/ui/dialog";\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormMessage,\n} from "@/components/ui/form";\nimport { Input } from "@/components/ui/input";\nimport { Label } from "@/components/ui/label";\nimport { zodResolver } from "@hookform/resolvers/zod";\nimport { useForm } from "react-hook-form";\nimport * as z from "zod";\n\nconst formSchema = z.object({\n  name: z.string().min(2, { message: "Name must be at least 2 characters" }),\n  username: z\n    .string()\n    .min(3, { message: "Username must be at least 3 characters" }),\n  email: z.string().email({ message: "Invalid email address" }),\n  phone: z.string().regex(/^\\+?[1-9]\\d{0,14}([-\\s]?\\d+)*$/, {\n    message: "Invalid phone number",\n  }),\n  address: z.string().optional(),\n  city: z.string().optional(),\n  country: z.string().optional(),\n});\n\ntype FormData = z.infer<typeof formSchema>;\n\nexport function InnerScrollFormBase() {\n  const form = useForm<FormData>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      name: "Pedro Duarte",\n      username: "@peduarte",\n      email: "pedro@example.com",\n      phone: "+1 555-123-4567",\n      address: "123 Main Street",\n      city: "New York",\n      country: "USA",\n    },\n  });\n\n  const onSubmit = (data: FormData) => {\n    alert(`Submitted Data:\n      name: ${data.name}\n      username: ${data.username}\n      email: ${data.email}\n      phone: ${data.phone}\n      address: ${data.address}\n      city: ${data.city}\n      country: ${data.country}\n    `);\n  };\n\n  return (\n    <Dialog>\n      <DialogTrigger asChild>\n        <Button variant="outline">Inner Scroll Form</Button>\n      </DialogTrigger>\n      <DialogContent className="sm:max-w-[425px] overflow-y-auto max-h-[400px]">\n        <DialogHeader>\n          <DialogTitle>Edit profile</DialogTitle>\n          <DialogDescription>\n            Make changes to your profile here. Click save when you\'re done.\n          </DialogDescription>\n        </DialogHeader>\n\n        <Form {...form}>\n          <form\n            onSubmit={form.handleSubmit(onSubmit)}\n            className="grid gap-4 py-4"\n          >\n            <FormField\n              control={form.control}\n              name="name"\n              render={({ field }) => (\n                <FormItem>\n                  <Label htmlFor="name">Name</Label>\n                  <FormControl>\n                    <Input id="name" className="col-span-3" {...field} />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            <FormField\n              control={form.control}\n              name="username"\n              render={({ field }) => (\n                <FormItem>\n                  <Label htmlFor="username">Username</Label>\n                  <FormControl>\n                    <Input id="username" className="col-span-3" {...field} />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            <FormField\n              control={form.control}\n              name="email"\n              render={({ field }) => (\n                <FormItem>\n                  <Label htmlFor="email">Email</Label>\n                  <FormControl>\n                    <Input\n                      id="email"\n                      type="email"\n                      className="col-span-3"\n                      {...field}\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            <FormField\n              control={form.control}\n              name="phone"\n              render={({ field }) => (\n                <FormItem>\n                  <Label htmlFor="phone">Phone</Label>\n                  <FormControl>\n                    <Input\n                      id="phone"\n                      type="tel"\n                      className="col-span-3"\n                      {...field}\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            <FormField\n              control={form.control}\n              name="address"\n              render={({ field }) => (\n                <FormItem>\n                  <Label htmlFor="address">Address</Label>\n                  <FormControl>\n                    <Input id="address" className="col-span-3" {...field} />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            <FormField\n              control={form.control}\n              name="city"\n              render={({ field }) => (\n                <FormItem>\n                  <Label htmlFor="city">City</Label>\n                  <FormControl>\n                    <Input id="city" className="col-span-3" {...field} />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            <FormField\n              control={form.control}\n              name="country"\n              render={({ field }) => (\n                <FormItem>\n                  <Label htmlFor="country">Country</Label>\n                  <FormControl>\n                    <Input id="country" className="col-span-3" {...field} />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            <DialogFooter>\n              <Button type="submit">Save changes</Button>\n            </DialogFooter>\n          </form>\n        </Form>\n      </DialogContent>\n    </Dialog>\n  );\n}\n';
