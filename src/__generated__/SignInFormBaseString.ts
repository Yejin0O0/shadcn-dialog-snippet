export const SignInFormBaseString =
  'import { Button } from "@/components/ui/button";\nimport { Checkbox } from "@/components/ui/checkbox";\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from "@/components/ui/dialog";\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormMessage,\n} from "@/components/ui/form";\nimport { Input } from "@/components/ui/input";\nimport { Label } from "@/components/ui/label";\nimport { zodResolver } from "@hookform/resolvers/zod";\nimport { Eye, EyeClosed } from "lucide-react";\nimport { useState } from "react";\nimport { useForm } from "react-hook-form";\nimport * as z from "zod";\n\nconst formSchema = z.object({\n  email: z.string().email({ message: "Invalid email address" }),\n  password: z\n    .string()\n    .min(6, { message: "Password must be at least 6 characters" }),\n});\n\ntype FormData = z.infer<typeof formSchema>;\n\nexport function SignInFormBase() {\n  const [showPassword, setShowPassword] = useState(false);\n\n  const togglePasswordVisibility = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const form = useForm<FormData>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      email: "",\n      password: "",\n    },\n  });\n\n  const onSubmit = () => {\n    alert("Login Success");\n  };\n\n  return (\n    <Dialog>\n      <DialogTrigger asChild>\n        <Button variant="outline">Sign In</Button>\n      </DialogTrigger>\n      <DialogContent className="sm:max-w-[425px] rounded-md shadow-lg p-6">\n        <DialogHeader>\n          <DialogTitle className="text-center text-2xl font-semibold">\n            Sign In\n          </DialogTitle>\n          <DialogDescription className="text-center text-gray-500">\n            Welcome back! Please enter your details\n          </DialogDescription>\n        </DialogHeader>\n\n        <Form {...form}>\n          <form\n            onSubmit={form.handleSubmit(onSubmit)}\n            className="grid gap-4 py-4"\n          >\n            {/* Email Input */}\n            <FormField\n              control={form.control}\n              name="email"\n              render={({ field }) => (\n                <FormItem>\n                  <Label>Email</Label>\n                  <FormControl>\n                    <Input\n                      id="email"\n                      placeholder="Enter your email"\n                      className="w-full p-3 border rounded-lg"\n                      {...field}\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            <FormField\n              control={form.control}\n              name="password"\n              render={({ field }) => (\n                <FormItem>\n                  <Label>Password</Label>\n                  <div className="relative">\n                    <FormControl>\n                      <Input\n                        type={showPassword ? "text" : "password"}\n                        placeholder="Enter your password"\n                        className="w-full p-3 border rounded-lg pr-10"\n                        {...field}\n                      />\n                    </FormControl>\n                    <Button\n                      variant="ghost"\n                      type="button"\n                      onClick={togglePasswordVisibility}\n                      className="absolute inset-y-0 right-0 flex items-center pr-3 hover:bg-transparent focus:outline-none"\n                    >\n                      {showPassword ? <Eye /> : <EyeClosed />}\n                    </Button>\n                  </div>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            <div className="flex justify-between items-center">\n              <div className="flex items-center space-x-2">\n                <Checkbox id="remember" />\n                <label htmlFor="remember" className="text-sm cursor-pointer">\n                  Remember for 30 Days\n                </label>\n              </div>\n              <a href="/" className="text-sm text-blue-500 hover:underline">\n                Forgot password\n              </a>\n            </div>\n\n            <Button type="submit" className="w-full p-3 rounded-lg">\n              Sign in\n            </Button>\n\n            <div className="relative flex py-4 items-center">\n              <div className="flex-grow border-t border-gray-300" />\n              <span className="flex-shrink mx-4 text-gray-400 text-sm">OR</span>\n              <div className="flex-grow border-t border-gray-300" />\n            </div>\n\n            <div className="grid gap-2">\n              <Button\n                variant="outline"\n                className="w-full flex justify-center items-center gap-2"\n              >\n                Sign up with Google\n              </Button>\n              <Button\n                variant="outline"\n                className="w-full flex justify-center items-center gap-2"\n              >\n                Sign up with Facebook\n              </Button>\n            </div>\n          </form>\n        </Form>\n      </DialogContent>\n    </Dialog>\n  );\n}\n';
